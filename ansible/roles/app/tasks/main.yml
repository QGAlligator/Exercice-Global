---
- name: Ensure required packages are installed
  apt:
    name: ["git", "nodejs", "npm", "nginx"]
    state: present
    update_cache: yes

- name: Ensure app directory exists
  file:
    path: /opt/mini-app
    state: directory
    owner: root
    group: root
    mode: "0755"

- name: Clone repository
  git:
    repo: "{{ repo_url }}"
    dest: /opt/mini-app
    version: "{{ repo_branch }}"
    force: yes

- name: Install npm dependencies
  command: npm install
  args:
    chdir: /opt/mini-app/app

- name: Run tests
  command: npm run test
  args:
    chdir: /opt/mini-app/app
  ignore_errors: yes

- name: Deploy static files to nginx web root
  shell: |
    rm -rf /var/www/mini-app || true
    mkdir -p /var/www/mini-app

    # Copier tous les fichiers de l'app
    cp -r /opt/mini-app/app/* /var/www/mini-app/ 2>/dev/null || true

    # S'assurer que le fichier health existe
    echo "OK" > /var/www/mini-app/health

- name: Ensure nginx config present
  template:
    src: nginx_app.conf.j2
    dest: /etc/nginx/sites-available/mini-app
    mode: "0644"

- name: Enable nginx site
  file:
    src: /etc/nginx/sites-available/mini-app
    dest: /etc/nginx/sites-enabled/mini-app
    state: link

- name: Remove default nginx site
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent

- name: Test nginx configuration
  command: nginx -t
  register: nginx_test
  changed_when: false

- name: Restart nginx
  shell: |
    pkill nginx || true
    sleep 2
    nginx
  when: nginx_test.rc == 0

- name: Verify deployment
  uri:
    url: http://localhost/health
    method: GET
    status_code: 200
  register: health_check
  changed_when: false

- name: Create a deployment log
  copy:
    content: "Deployed by Ansible on {{ ansible_date_time.date }} branch {{ repo_branch }}\nHealth check: {{ health_check.status }}"
    dest: /var/log/mini-app-deploy.log
    owner: root
    mode: "0644"
