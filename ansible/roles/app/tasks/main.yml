---
- name: Ensure required packages are installed
  apt:
    name: ["git", "nodejs", "npm", "nginx"]
    state: present
    update_cache: yes

- name: Ensure app directory exists
  file:
    path: /opt/mini-app
    state: directory
    owner: root
    group: root
    mode: "0755"

- name: Clone repository
  git:
    repo: "{{ repo_url }}"
    dest: /opt/mini-app
    version: "{{ repo_branch }}"
    force: yes

- name: Install npm dependencies
  command: npm install
  args:
    chdir: /opt/mini-app/app

- name: Run tests
  command: npm run test
  args:
    chdir: /opt/mini-app/app

- name: Deploy static files to nginx web root
  shell: |
    rm -rf /var/www/mini-app || true
    mkdir -p /var/www/mini-app

    # Vérifier où sont les fichiers statiques
    if [ -d "/opt/mini-app/app/public" ]; then
      cp -r /opt/mini-app/app/public/* /var/www/mini-app/
    elif [ -d "/opt/mini-app/app/static" ]; then
      cp -r /opt/mini-app/app/static/* /var/www/mini-app/
    else
      # Si pas de dossier public/static, utiliser app/ directement
      cp -r /opt/mini-app/app/* /var/www/mini-app/ 2>/dev/null || true
      # Créer une page par défaut
      echo "<html><body><h1>Mini App</h1><p>Deployed successfully</p></body></html>" > /var/www/mini-app/index.html
    fi
  become: yes

- name: Ensure nginx config present
  template:
    src: nginx_app.conf.j2
    dest: /etc/nginx/sites-available/mini-app
    mode: "0644"

- name: Enable nginx site
  file:
    src: /etc/nginx/sites-available/mini-app
    dest: /etc/nginx/sites-enabled/mini-app
    state: link

- name: Remove default nginx site
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent

- name: Restart nginx
  service:
    name: nginx
    state: restarted
    enabled: yes

- name: Create a deployment log
  copy:
    content: "Deployed by Ansible on {{ ansible_date_time.date }} branch {{ repo_branch }}\n"
    dest: /var/log/mini-app-deploy.log
    owner: root
    mode: "0644"
